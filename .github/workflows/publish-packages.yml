name: Publish packages and images
on:
  push:
    branches:
      - main
      - develop

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version:
            8.0   
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@b82e662a7199df56ac962118e506d9efb9830f82 # v4.1.0
        with:
          versionSpec: '6.3.x'
      - name: Install swashbuckle CLI
        run: dotnet tool install --global Swashbuckle.AspNetCore.Cli --version 7.2.0
      - name: Install nswag CLI
        run: dotnet tool install --global Nswag.ConsoleCore
      - name: Fetch GitVersion
        uses: gittools/actions/gitversion/execute@b82e662a7199df56ac962118e506d9efb9830f82 # v4.1.0
      - name: Restore dependencies
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet nuget add source "https://nuget.pkg.github.com/ballware/index.json" \
            --name github \
            --username frankball \
            --password "$GITHUB_TOKEN" \
            --store-password-in-clear-text
          dotnet restore ballware-ml-service.sln
      - name: Build solution
        run: |
          dotnet build ballware-ml-service.sln -p:Version=${{ env.GitVersion_SemVer }} --configuration Release   
      - name: Generate Swagger specification
        working-directory: src/Ballware.Ml.Service
        env:
          ASPNETCORE_ENVIRONMENT: Swagger
        run: |
          swagger tofile \
            --output ../Ballware.Ml.Service.Client/swagger.json \
            ./bin/Release/net8.0/Ballware.Ml.Service.dll \
            service
      - name: Generate service client code
        working-directory: src/Ballware.Ml.Service.Client
        run: |
          nswag run nswag.json         
      - name: Pack NuGet packages
        run: |
          dotnet pack ballware-ml-service.sln -p:Version=${{ env.GitVersion_SemVer }} --configuration Release --output ./nupkgs
      - name: Publish NuGet packages to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet nuget push ./nupkgs/*.nupkg --source https://nuget.pkg.github.com/ballware/index.json --api-key $GITHUB_TOKEN --skip-duplicate
      - name: Create version tag on release
        if: github.ref == 'refs/heads/main'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ env.GitVersion_SemVer }}
          git push origin refs/tags/v${{ env.GitVersion_SemVer }} refs/heads/main
      - name: Set environment variables for Docker tags
        run: |
          echo "DOCKER_TAG=${{ env.GitVersion_SemVer }}" >> $GITHUB_ENV
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "DOCKER_TAG2=stable" >> $GITHUB_ENV
          else
            echo "DOCKER_TAG2=latest" >> $GITHUB_ENV
          fi      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@1104d471370f9806843c095c1db02b5a90c5f8b6 # v3
        with:
          context: src/.
          file: src/Ballware.Ml.Service/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/ballware/ballware-ml-service:${{ env.DOCKER_TAG }}
            ghcr.io/ballware/ballware-ml-service:${{ env.DOCKER_TAG2 }}      
